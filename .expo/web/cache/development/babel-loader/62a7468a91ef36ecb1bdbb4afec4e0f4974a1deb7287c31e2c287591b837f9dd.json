{"ast":null,"code":"import React from 'react';\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScoreButton from \"./ScoreButton\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ScoringModal = function ScoringModal(_ref) {\n  var isVisible = _ref.isVisible,\n    onClose = _ref.onClose,\n    player = _ref.player,\n    buttons = _ref.buttons;\n  if (!player) return null;\n  var playerName = player.nombre || player.name;\n  var playerScore = player.score || player.puntos;\n  return _jsx(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: isVisible,\n    onRequestClose: onClose,\n    children: _jsx(TouchableOpacity, {\n      style: styles.overlay,\n      activeOpacity: 1,\n      onPressOut: onClose,\n      children: _jsxs(View, {\n        style: styles.modalContainer,\n        children: [_jsxs(View, {\n          style: styles.modalHeader,\n          children: [_jsx(Text, {\n            style: styles.modalTitle,\n            children: playerName\n          }), _jsx(Text, {\n            style: [styles.modalScore, {\n              color: player.color || '#bbff01'\n            }],\n            children: playerScore\n          })]\n        }), _jsx(ScrollView, {\n          contentContainerStyle: styles.buttonsGrid,\n          children: buttons.map(function (button, index) {\n            return _jsx(View, {\n              style: styles.buttonWrapper,\n              children: _jsx(ScoreButton, {\n                label: button.label,\n                onPress: button.onPress,\n                icon: button.icon,\n                variant: button.variant,\n                disabled: button.disabled,\n                className: button.className\n              })\n            }, index);\n          })\n        }), _jsx(TouchableOpacity, {\n          style: styles.closeButton,\n          onPress: onClose,\n          children: _jsx(Text, {\n            style: styles.closeButtonText,\n            children: \"Cerrar\"\n          })\n        })]\n      })\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  overlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.7)',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  modalContainer: {\n    width: Dimensions.get('window').width * 0.9,\n    maxHeight: Dimensions.get('window').height * 0.7,\n    backgroundColor: '#1E2A3A',\n    borderRadius: 20,\n    padding: 25,\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  modalHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    width: '100%',\n    marginBottom: 20\n  },\n  modalTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#FFFFFF'\n  },\n  modalScore: {\n    fontSize: 28,\n    fontWeight: 'bold'\n  },\n  buttonsGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center'\n  },\n  buttonWrapper: {\n    margin: 8\n  },\n  closeButton: {\n    marginTop: 20,\n    backgroundColor: '#c0392b',\n    borderRadius: 10,\n    paddingVertical: 12,\n    paddingHorizontal: 30\n  },\n  closeButtonText: {\n    color: '#FFFFFF',\n    fontSize: 16,\n    fontWeight: 'bold'\n  }\n});\nexport default ScoringModal;","map":{"version":3,"names":["React","Modal","View","Text","StyleSheet","TouchableOpacity","ScrollView","Dimensions","ScoreButton","jsx","_jsx","jsxs","_jsxs","ScoringModal","_ref","isVisible","onClose","player","buttons","playerName","nombre","name","playerScore","score","puntos","animationType","transparent","visible","onRequestClose","children","style","styles","overlay","activeOpacity","onPressOut","modalContainer","modalHeader","modalTitle","modalScore","color","contentContainerStyle","buttonsGrid","map","button","index","buttonWrapper","label","onPress","icon","variant","disabled","className","closeButton","closeButtonText","create","flex","backgroundColor","justifyContent","alignItems","width","get","maxHeight","height","borderRadius","padding","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","flexDirection","marginBottom","fontSize","fontWeight","flexWrap","margin","marginTop","paddingVertical","paddingHorizontal"],"sources":["C:/Users/facun/Desktop/counter/components/ScoringModal.js"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  Modal,\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n  Dimensions,\r\n} from 'react-native';\r\nimport ScoreButton from './ScoreButton';\r\n\r\nconst ScoringModal = ({ isVisible, onClose, player, buttons }) => {\r\n  if (!player) return null;\r\n\r\n  // Handle both naming conventions (nombre/name and score)\r\n  const playerName = player.nombre || player.name;\r\n  const playerScore = player.score || player.puntos;\r\n\r\n  return (\r\n    <Modal\r\n      animationType=\"slide\"\r\n      transparent={true}\r\n      visible={isVisible}\r\n      onRequestClose={onClose}\r\n    >\r\n      <TouchableOpacity\r\n        style={styles.overlay}\r\n        activeOpacity={1}\r\n        onPressOut={onClose}\r\n      >\r\n        <View style={styles.modalContainer}>\r\n          <View style={styles.modalHeader}>\r\n            <Text style={styles.modalTitle}>{playerName}</Text>\r\n            <Text style={[styles.modalScore, { color: player.color || '#bbff01' }]}>\r\n              {playerScore}\r\n            </Text>\r\n          </View>\r\n          \r\n          <ScrollView contentContainerStyle={styles.buttonsGrid}>\r\n            {buttons.map((button, index) => (\r\n              <View key={index} style={styles.buttonWrapper}>\r\n                <ScoreButton\r\n                  label={button.label}\r\n                  onPress={button.onPress}\r\n                  icon={button.icon}\r\n                  variant={button.variant}\r\n                  disabled={button.disabled}\r\n                  className={button.className}\r\n                />\r\n              </View>\r\n            ))}\r\n          </ScrollView>\r\n\r\n          <TouchableOpacity style={styles.closeButton} onPress={onClose}>\r\n            <Text style={styles.closeButtonText}>Cerrar</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </TouchableOpacity>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  overlay: {\r\n    flex: 1,\r\n    backgroundColor: 'rgba(0, 0, 0, 0.7)',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  modalContainer: {\r\n    width: Dimensions.get('window').width * 0.9,\r\n    maxHeight: Dimensions.get('window').height * 0.7,\r\n    backgroundColor: '#1E2A3A',\r\n    borderRadius: 20,\r\n    padding: 25,\r\n    alignItems: 'center',\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 4,\r\n    elevation: 5,\r\n  },\r\n  modalHeader: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    width: '100%',\r\n    marginBottom: 20,\r\n  },\r\n  modalTitle: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: '#FFFFFF',\r\n  },\r\n  modalScore: {\r\n    fontSize: 28,\r\n    fontWeight: 'bold',\r\n  },\r\n  buttonsGrid: {\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n  },\r\n  buttonWrapper: {\r\n    margin: 8,\r\n  },\r\n  closeButton: {\r\n    marginTop: 20,\r\n    backgroundColor: '#c0392b',\r\n    borderRadius: 10,\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 30,\r\n  },\r\n  closeButtonText: {\r\n    color: '#FFFFFF',\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n\r\nexport default ScoringModal; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,KAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,UAAA;AAU1B,OAAOC,WAAW;AAAsB,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAExC,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAAC,IAAA,EAAgD;EAAA,IAA1CC,SAAS,GAAAD,IAAA,CAATC,SAAS;IAAEC,OAAO,GAAAF,IAAA,CAAPE,OAAO;IAAEC,MAAM,GAAAH,IAAA,CAANG,MAAM;IAAEC,OAAO,GAAAJ,IAAA,CAAPI,OAAO;EACzD,IAAI,CAACD,MAAM,EAAE,OAAO,IAAI;EAGxB,IAAME,UAAU,GAAGF,MAAM,CAACG,MAAM,IAAIH,MAAM,CAACI,IAAI;EAC/C,IAAMC,WAAW,GAAGL,MAAM,CAACM,KAAK,IAAIN,MAAM,CAACO,MAAM;EAEjD,OACEd,IAAA,CAACT,KAAK;IACJwB,aAAa,EAAC,OAAO;IACrBC,WAAW,EAAE,IAAK;IAClBC,OAAO,EAAEZ,SAAU;IACnBa,cAAc,EAAEZ,OAAQ;IAAAa,QAAA,EAExBnB,IAAA,CAACL,gBAAgB;MACfyB,KAAK,EAAEC,MAAM,CAACC,OAAQ;MACtBC,aAAa,EAAE,CAAE;MACjBC,UAAU,EAAElB,OAAQ;MAAAa,QAAA,EAEpBjB,KAAA,CAACV,IAAI;QAAC4B,KAAK,EAAEC,MAAM,CAACI,cAAe;QAAAN,QAAA,GACjCjB,KAAA,CAACV,IAAI;UAAC4B,KAAK,EAAEC,MAAM,CAACK,WAAY;UAAAP,QAAA,GAC9BnB,IAAA,CAACP,IAAI;YAAC2B,KAAK,EAAEC,MAAM,CAACM,UAAW;YAAAR,QAAA,EAAEV;UAAU,CAAO,CAAC,EACnDT,IAAA,CAACP,IAAI;YAAC2B,KAAK,EAAE,CAACC,MAAM,CAACO,UAAU,EAAE;cAAEC,KAAK,EAAEtB,MAAM,CAACsB,KAAK,IAAI;YAAU,CAAC,CAAE;YAAAV,QAAA,EACpEP;UAAW,CACR,CAAC;QAAA,CACH,CAAC,EAEPZ,IAAA,CAACJ,UAAU;UAACkC,qBAAqB,EAAET,MAAM,CAACU,WAAY;UAAAZ,QAAA,EACnDX,OAAO,CAACwB,GAAG,CAAC,UAACC,MAAM,EAAEC,KAAK;YAAA,OACzBlC,IAAA,CAACR,IAAI;cAAa4B,KAAK,EAAEC,MAAM,CAACc,aAAc;cAAAhB,QAAA,EAC5CnB,IAAA,CAACF,WAAW;gBACVsC,KAAK,EAAEH,MAAM,CAACG,KAAM;gBACpBC,OAAO,EAAEJ,MAAM,CAACI,OAAQ;gBACxBC,IAAI,EAAEL,MAAM,CAACK,IAAK;gBAClBC,OAAO,EAAEN,MAAM,CAACM,OAAQ;gBACxBC,QAAQ,EAAEP,MAAM,CAACO,QAAS;gBAC1BC,SAAS,EAAER,MAAM,CAACQ;cAAU,CAC7B;YAAC,GAROP,KASL,CAAC;UAAA,CACR;QAAC,CACQ,CAAC,EAEblC,IAAA,CAACL,gBAAgB;UAACyB,KAAK,EAAEC,MAAM,CAACqB,WAAY;UAACL,OAAO,EAAE/B,OAAQ;UAAAa,QAAA,EAC5DnB,IAAA,CAACP,IAAI;YAAC2B,KAAK,EAAEC,MAAM,CAACsB,eAAgB;YAAAxB,QAAA,EAAC;UAAM,CAAM;QAAC,CAClC,CAAC;MAAA,CACf;IAAC,CACS;EAAC,CACd,CAAC;AAEZ,CAAC;AAED,IAAME,MAAM,GAAG3B,UAAU,CAACkD,MAAM,CAAC;EAC/BtB,OAAO,EAAE;IACPuB,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,oBAAoB;IACrCC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EACd,CAAC;EACDvB,cAAc,EAAE;IACdwB,KAAK,EAAEpD,UAAU,CAACqD,GAAG,CAAC,QAAQ,CAAC,CAACD,KAAK,GAAG,GAAG;IAC3CE,SAAS,EAAEtD,UAAU,CAACqD,GAAG,CAAC,QAAQ,CAAC,CAACE,MAAM,GAAG,GAAG;IAChDN,eAAe,EAAE,SAAS;IAC1BO,YAAY,EAAE,EAAE;IAChBC,OAAO,EAAE,EAAE;IACXN,UAAU,EAAE,QAAQ;IACpBO,WAAW,EAAE,MAAM;IACnBC,YAAY,EAAE;MAAEP,KAAK,EAAE,CAAC;MAAEG,MAAM,EAAE;IAAE,CAAC;IACrCK,aAAa,EAAE,IAAI;IACnBC,YAAY,EAAE,CAAC;IACfC,SAAS,EAAE;EACb,CAAC;EACDjC,WAAW,EAAE;IACXkC,aAAa,EAAE,KAAK;IACpBb,cAAc,EAAE,eAAe;IAC/BC,UAAU,EAAE,QAAQ;IACpBC,KAAK,EAAE,MAAM;IACbY,YAAY,EAAE;EAChB,CAAC;EACDlC,UAAU,EAAE;IACVmC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBlC,KAAK,EAAE;EACT,CAAC;EACDD,UAAU,EAAE;IACVkC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EACd,CAAC;EACDhC,WAAW,EAAE;IACX6B,aAAa,EAAE,KAAK;IACpBI,QAAQ,EAAE,MAAM;IAChBjB,cAAc,EAAE;EAClB,CAAC;EACDZ,aAAa,EAAE;IACb8B,MAAM,EAAE;EACV,CAAC;EACDvB,WAAW,EAAE;IACXwB,SAAS,EAAE,EAAE;IACbpB,eAAe,EAAE,SAAS;IAC1BO,YAAY,EAAE,EAAE;IAChBc,eAAe,EAAE,EAAE;IACnBC,iBAAiB,EAAE;EACrB,CAAC;EACDzB,eAAe,EAAE;IACfd,KAAK,EAAE,SAAS;IAChBiC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EACd;AACF,CAAC,CAAC;AAEF,eAAe5D,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}