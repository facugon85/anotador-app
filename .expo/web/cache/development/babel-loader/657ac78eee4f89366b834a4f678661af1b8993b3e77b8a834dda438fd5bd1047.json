{"ast":null,"code":"import React from 'react';\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScoreButton from \"./ScoreButton\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ConfirmationModal = function ConfirmationModal(_ref) {\n  var isVisible = _ref.isVisible,\n    onClose = _ref.onClose,\n    onConfirm = _ref.onConfirm,\n    title = _ref.title,\n    message = _ref.message;\n  return _jsx(Modal, {\n    animationType: \"fade\",\n    transparent: true,\n    visible: isVisible,\n    onRequestClose: onClose,\n    children: _jsx(View, {\n      style: styles.overlay,\n      children: _jsxs(View, {\n        style: styles.modalContainer,\n        children: [_jsx(Text, {\n          style: styles.title,\n          children: title\n        }), _jsx(Text, {\n          style: styles.message,\n          children: message\n        }), _jsxs(View, {\n          style: styles.buttonContainer,\n          children: [_jsx(ScoreButton, {\n            label: \"Cancelar\",\n            onPress: onClose,\n            variant: \"secondary\",\n            style: styles.button\n          }), _jsx(ScoreButton, {\n            label: \"Confirmar\",\n            onPress: function onPress() {\n              onConfirm();\n              onClose();\n            },\n            variant: \"danger\",\n            style: styles.button\n          })]\n        })]\n      })\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  overlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.75)',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20\n  },\n  modalContainer: {\n    width: '100%',\n    maxWidth: 400,\n    backgroundColor: '#1E2A3A',\n    borderRadius: 20,\n    padding: 30,\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 5,\n    elevation: 10,\n    borderWidth: 1,\n    borderColor: 'rgba(255, 255, 255, 0.1)'\n  },\n  title: {\n    fontSize: 22,\n    fontWeight: 'bold',\n    color: '#FFFFFF',\n    marginBottom: 15,\n    textAlign: 'center'\n  },\n  message: {\n    fontSize: 16,\n    color: '#d4d4d4',\n    textAlign: 'center',\n    marginBottom: 30,\n    lineHeight: 24\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    width: '100%'\n  },\n  button: {\n    flex: 1,\n    marginHorizontal: 8\n  }\n});\nexport default ConfirmationModal;","map":{"version":3,"names":["React","Modal","View","Text","StyleSheet","Dimensions","ScoreButton","jsx","_jsx","jsxs","_jsxs","ConfirmationModal","_ref","isVisible","onClose","onConfirm","title","message","animationType","transparent","visible","onRequestClose","children","style","styles","overlay","modalContainer","buttonContainer","label","onPress","variant","button","create","flex","backgroundColor","justifyContent","alignItems","padding","width","maxWidth","borderRadius","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","elevation","borderWidth","borderColor","fontSize","fontWeight","color","marginBottom","textAlign","lineHeight","flexDirection","marginHorizontal"],"sources":["C:/Users/facun/Desktop/counter/components/ConfirmationModal.js"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  Modal,\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  Dimensions,\r\n} from 'react-native';\r\nimport ScoreButton from './ScoreButton';\r\n\r\nconst ConfirmationModal = ({ isVisible, onClose, onConfirm, title, message }) => {\r\n  return (\r\n    <Modal\r\n      animationType=\"fade\"\r\n      transparent={true}\r\n      visible={isVisible}\r\n      onRequestClose={onClose}\r\n    >\r\n      <View style={styles.overlay}>\r\n        <View style={styles.modalContainer}>\r\n          <Text style={styles.title}>{title}</Text>\r\n          <Text style={styles.message}>{message}</Text>\r\n          <View style={styles.buttonContainer}>\r\n            <ScoreButton\r\n              label=\"Cancelar\"\r\n              onPress={onClose}\r\n              variant=\"secondary\"\r\n              style={styles.button}\r\n            />\r\n            <ScoreButton\r\n              label=\"Confirmar\"\r\n              onPress={() => {\r\n                onConfirm();\r\n                onClose();\r\n              }}\r\n              variant=\"danger\"\r\n              style={styles.button}\r\n            />\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  overlay: {\r\n    flex: 1,\r\n    backgroundColor: 'rgba(0, 0, 0, 0.75)',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 20,\r\n  },\r\n  modalContainer: {\r\n    width: '100%',\r\n    maxWidth: 400,\r\n    backgroundColor: '#1E2A3A',\r\n    borderRadius: 20,\r\n    padding: 30,\r\n    alignItems: 'center',\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 4 },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 5,\r\n    elevation: 10,\r\n    borderWidth: 1,\r\n    borderColor: 'rgba(255, 255, 255, 0.1)',\r\n  },\r\n  title: {\r\n    fontSize: 22,\r\n    fontWeight: 'bold',\r\n    color: '#FFFFFF',\r\n    marginBottom: 15,\r\n    textAlign: 'center',\r\n  },\r\n  message: {\r\n    fontSize: 16,\r\n    color: '#d4d4d4',\r\n    textAlign: 'center',\r\n    marginBottom: 30,\r\n    lineHeight: 24,\r\n  },\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    width: '100%',\r\n  },\r\n  button: {\r\n    flex: 1,\r\n    marginHorizontal: 8,\r\n  },\r\n});\r\n\r\nexport default ConfirmationModal; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}